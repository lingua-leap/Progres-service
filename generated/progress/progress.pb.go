// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: progress/progress.proto

package progress

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode            string `protobuf:"bytes,1,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	TotalLessonsCompleted   int64  `protobuf:"varint,2,opt,name=totalLessonsCompleted,proto3" json:"totalLessonsCompleted,omitempty"`
	TotalExercisesCompleted int64  `protobuf:"varint,3,opt,name=totalExercisesCompleted,proto3" json:"totalExercisesCompleted,omitempty"`
}

func (x *GetStatisticsResponse) Reset() {
	*x = GetStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsResponse) ProtoMessage() {}

func (x *GetStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{0}
}

func (x *GetStatisticsResponse) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *GetStatisticsResponse) GetTotalLessonsCompleted() int64 {
	if x != nil {
		return x.TotalLessonsCompleted
	}
	return 0
}

func (x *GetStatisticsResponse) GetTotalExercisesCompleted() int64 {
	if x != nil {
		return x.TotalExercisesCompleted
	}
	return 0
}

type GetUserSkillsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode string   `protobuf:"bytes,1,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	Skills       []*Skill `protobuf:"bytes,2,rep,name=skills,proto3" json:"skills,omitempty"`
}

func (x *GetUserSkillsResponse) Reset() {
	*x = GetUserSkillsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSkillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSkillsResponse) ProtoMessage() {}

func (x *GetUserSkillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSkillsResponse.ProtoReflect.Descriptor instead.
func (*GetUserSkillsResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserSkillsResponse) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *GetUserSkillsResponse) GetSkills() []*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level               int64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	ProgressToNextLevel int64  `protobuf:"varint,3,opt,name=progressToNextLevel,proto3" json:"progressToNextLevel,omitempty"`
	RulesMastered       int64  `protobuf:"varint,4,opt,name=rulesMastered,proto3" json:"rulesMastered,omitempty"`
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{2}
}

func (x *Skill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Skill) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Skill) GetProgressToNextLevel() int64 {
	if x != nil {
		return x.ProgressToNextLevel
	}
	return 0
}

func (x *Skill) GetRulesMastered() int64 {
	if x != nil {
		return x.RulesMastered
	}
	return 0
}

type GetLeadersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode string         `protobuf:"bytes,1,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	LeaderBoard  []*LeaderBoard `protobuf:"bytes,2,rep,name=leaderBoard,proto3" json:"leaderBoard,omitempty"`
}

func (x *GetLeadersResponse) Reset() {
	*x = GetLeadersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadersResponse) ProtoMessage() {}

func (x *GetLeadersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadersResponse.ProtoReflect.Descriptor instead.
func (*GetLeadersResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{3}
}

func (x *GetLeadersResponse) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *GetLeadersResponse) GetLeaderBoard() []*LeaderBoard {
	if x != nil {
		return x.LeaderBoard
	}
	return nil
}

type LeaderBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank     int64  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Xp       int64  `protobuf:"varint,3,opt,name=xp,proto3" json:"xp,omitempty"`
	Level    string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *LeaderBoard) Reset() {
	*x = LeaderBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderBoard) ProtoMessage() {}

func (x *LeaderBoard) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderBoard.ProtoReflect.Descriptor instead.
func (*LeaderBoard) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{4}
}

func (x *LeaderBoard) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *LeaderBoard) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LeaderBoard) GetXp() int64 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *LeaderBoard) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type LanguageCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LanguageCode) Reset() {
	*x = LanguageCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageCode) ProtoMessage() {}

func (x *LanguageCode) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageCode.ProtoReflect.Descriptor instead.
func (*LanguageCode) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{5}
}

func (x *LanguageCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetUserAchievementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Achievements []*Achievement `protobuf:"bytes,1,rep,name=achievements,proto3" json:"achievements,omitempty"`
}

func (x *GetUserAchievementsResponse) Reset() {
	*x = GetUserAchievementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAchievementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAchievementsResponse) ProtoMessage() {}

func (x *GetUserAchievementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAchievementsResponse.ProtoReflect.Descriptor instead.
func (*GetUserAchievementsResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserAchievementsResponse) GetAchievements() []*Achievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

type Achievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	EarnedAt    string `protobuf:"bytes,4,opt,name=earnedAt,proto3" json:"earnedAt,omitempty"`
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{7}
}

func (x *Achievement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Achievement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Achievement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Achievement) GetEarnedAt() string {
	if x != nil {
		return x.EarnedAt
	}
	return ""
}

type GetMonthlyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month                 string    `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	Progress              *Progress `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"`
	TotalMinutesPracticed string    `protobuf:"bytes,3,opt,name=totalMinutesPracticed,proto3" json:"totalMinutesPracticed,omitempty"`
	MostImprovedSkill     string    `protobuf:"bytes,4,opt,name=mostImprovedSkill,proto3" json:"mostImprovedSkill,omitempty"`
}

func (x *GetMonthlyProgressResponse) Reset() {
	*x = GetMonthlyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthlyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlyProgressResponse) ProtoMessage() {}

func (x *GetMonthlyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlyProgressResponse.ProtoReflect.Descriptor instead.
func (*GetMonthlyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{8}
}

func (x *GetMonthlyProgressResponse) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *GetMonthlyProgressResponse) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetMonthlyProgressResponse) GetTotalMinutesPracticed() string {
	if x != nil {
		return x.TotalMinutesPracticed
	}
	return ""
}

func (x *GetMonthlyProgressResponse) GetMostImprovedSkill() string {
	if x != nil {
		return x.MostImprovedSkill
	}
	return ""
}

type GetWeeklyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekStart             string    `protobuf:"bytes,1,opt,name=weekStart,proto3" json:"weekStart,omitempty"`
	WeekEnd               string    `protobuf:"bytes,2,opt,name=weekEnd,proto3" json:"weekEnd,omitempty"`
	Progress              *Progress `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`
	TotalMinutesPracticed string    `protobuf:"bytes,4,opt,name=totalMinutesPracticed,proto3" json:"totalMinutesPracticed,omitempty"`
	MostActiveDay         string    `protobuf:"bytes,5,opt,name=mostActiveDay,proto3" json:"mostActiveDay,omitempty"`
}

func (x *GetWeeklyProgressResponse) Reset() {
	*x = GetWeeklyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeeklyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeeklyProgressResponse) ProtoMessage() {}

func (x *GetWeeklyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeeklyProgressResponse.ProtoReflect.Descriptor instead.
func (*GetWeeklyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{9}
}

func (x *GetWeeklyProgressResponse) GetWeekStart() string {
	if x != nil {
		return x.WeekStart
	}
	return ""
}

func (x *GetWeeklyProgressResponse) GetWeekEnd() string {
	if x != nil {
		return x.WeekEnd
	}
	return ""
}

func (x *GetWeeklyProgressResponse) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetWeeklyProgressResponse) GetTotalMinutesPracticed() string {
	if x != nil {
		return x.TotalMinutesPracticed
	}
	return ""
}

func (x *GetWeeklyProgressResponse) GetMostActiveDay() string {
	if x != nil {
		return x.MostActiveDay
	}
	return ""
}

type GetDailyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       string    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Progress   *Progress `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"`
	StreakDays string    `protobuf:"bytes,3,opt,name=streakDays,proto3" json:"streakDays,omitempty"`
}

func (x *GetDailyProgressResponse) Reset() {
	*x = GetDailyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyProgressResponse) ProtoMessage() {}

func (x *GetDailyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyProgressResponse.ProtoReflect.Descriptor instead.
func (*GetDailyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{10}
}

func (x *GetDailyProgressResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *GetDailyProgressResponse) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetDailyProgressResponse) GetStreakDays() string {
	if x != nil {
		return x.StreakDays
	}
	return ""
}

type LCodeUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
}

func (x *LCodeUID) Reset() {
	*x = LCodeUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LCodeUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCodeUID) ProtoMessage() {}

func (x *LCodeUID) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCodeUID.ProtoReflect.Descriptor instead.
func (*LCodeUID) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{11}
}

func (x *LCodeUID) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LCodeUID) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type GetUserProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode string    `protobuf:"bytes,1,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	Level        string    `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Progress     *Progress `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *GetUserProgressResponse) Reset() {
	*x = GetUserProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProgressResponse) ProtoMessage() {}

func (x *GetUserProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProgressResponse.ProtoReflect.Descriptor instead.
func (*GetUserProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserProgressResponse) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *GetUserProgressResponse) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *GetUserProgressResponse) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xp                int64 `protobuf:"varint,1,opt,name=xp,proto3" json:"xp,omitempty"`
	LessonCompleted   int64 `protobuf:"varint,2,opt,name=lessonCompleted,proto3" json:"lessonCompleted,omitempty"`
	VocabularyLearned int64 `protobuf:"varint,3,opt,name=vocabularyLearned,proto3" json:"vocabularyLearned,omitempty"`
}

func (x *Progress) Reset() {
	*x = Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progress) ProtoMessage() {}

func (x *Progress) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progress.ProtoReflect.Descriptor instead.
func (*Progress) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{13}
}

func (x *Progress) GetXp() int64 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *Progress) GetLessonCompleted() int64 {
	if x != nil {
		return x.LessonCompleted
	}
	return 0
}

func (x *Progress) GetVocabularyLearned() int64 {
	if x != nil {
		return x.VocabularyLearned
	}
	return 0
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_progress_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_progress_progress_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_progress_progress_proto_rawDescGZIP(), []int{14}
}

func (x *UserID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_progress_progress_proto protoreflect.FileDescriptor

var file_progress_progress_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x22, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x05, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a,
	0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x63, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x22, 0x0a, 0x0c, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x58, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x0b, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc6, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x6f, 0x73, 0x74, 0x49,
	0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65,
	0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x45, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x45, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x22, 0x7e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6b, 0x44, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x44, 0x61, 0x79, 0x73, 0x22, 0x46, 0x0a, 0x08, 0x4c, 0x43, 0x6f, 0x64, 0x65,
	0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x83, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x72, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x78,
	0x70, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x22, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xde, 0x04, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x49, 0x44, 0x1a, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x49, 0x44, 0x1a, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x43, 0x6f, 0x64, 0x65,
	0x55, 0x49, 0x44, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_progress_progress_proto_rawDescOnce sync.Once
	file_progress_progress_proto_rawDescData = file_progress_progress_proto_rawDesc
)

func file_progress_progress_proto_rawDescGZIP() []byte {
	file_progress_progress_proto_rawDescOnce.Do(func() {
		file_progress_progress_proto_rawDescData = protoimpl.X.CompressGZIP(file_progress_progress_proto_rawDescData)
	})
	return file_progress_progress_proto_rawDescData
}

var file_progress_progress_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_progress_progress_proto_goTypes = []any{
	(*GetStatisticsResponse)(nil),       // 0: progress.GetStatisticsResponse
	(*GetUserSkillsResponse)(nil),       // 1: progress.GetUserSkillsResponse
	(*Skill)(nil),                       // 2: progress.Skill
	(*GetLeadersResponse)(nil),          // 3: progress.GetLeadersResponse
	(*LeaderBoard)(nil),                 // 4: progress.LeaderBoard
	(*LanguageCode)(nil),                // 5: progress.LanguageCode
	(*GetUserAchievementsResponse)(nil), // 6: progress.GetUserAchievementsResponse
	(*Achievement)(nil),                 // 7: progress.Achievement
	(*GetMonthlyProgressResponse)(nil),  // 8: progress.GetMonthlyProgressResponse
	(*GetWeeklyProgressResponse)(nil),   // 9: progress.GetWeeklyProgressResponse
	(*GetDailyProgressResponse)(nil),    // 10: progress.GetDailyProgressResponse
	(*LCodeUID)(nil),                    // 11: progress.LCodeUID
	(*GetUserProgressResponse)(nil),     // 12: progress.GetUserProgressResponse
	(*Progress)(nil),                    // 13: progress.Progress
	(*UserID)(nil),                      // 14: progress.UserID
}
var file_progress_progress_proto_depIdxs = []int32{
	2,  // 0: progress.GetUserSkillsResponse.skills:type_name -> progress.Skill
	4,  // 1: progress.GetLeadersResponse.leaderBoard:type_name -> progress.LeaderBoard
	7,  // 2: progress.GetUserAchievementsResponse.achievements:type_name -> progress.Achievement
	13, // 3: progress.GetMonthlyProgressResponse.progress:type_name -> progress.Progress
	13, // 4: progress.GetWeeklyProgressResponse.progress:type_name -> progress.Progress
	13, // 5: progress.GetDailyProgressResponse.progress:type_name -> progress.Progress
	13, // 6: progress.GetUserProgressResponse.progress:type_name -> progress.Progress
	11, // 7: progress.ProgressService.GetUserProgress:input_type -> progress.LCodeUID
	14, // 8: progress.ProgressService.GetDailyProgress:input_type -> progress.UserID
	14, // 9: progress.ProgressService.GetWeeklyProgress:input_type -> progress.UserID
	14, // 10: progress.ProgressService.GetMonthlyProgress:input_type -> progress.UserID
	14, // 11: progress.ProgressService.GetUserAchievement:input_type -> progress.UserID
	5,  // 12: progress.ProgressService.GetLeaders:input_type -> progress.LanguageCode
	11, // 13: progress.ProgressService.GetUserSkills:input_type -> progress.LCodeUID
	11, // 14: progress.ProgressService.GetStatistics:input_type -> progress.LCodeUID
	12, // 15: progress.ProgressService.GetUserProgress:output_type -> progress.GetUserProgressResponse
	10, // 16: progress.ProgressService.GetDailyProgress:output_type -> progress.GetDailyProgressResponse
	9,  // 17: progress.ProgressService.GetWeeklyProgress:output_type -> progress.GetWeeklyProgressResponse
	8,  // 18: progress.ProgressService.GetMonthlyProgress:output_type -> progress.GetMonthlyProgressResponse
	6,  // 19: progress.ProgressService.GetUserAchievement:output_type -> progress.GetUserAchievementsResponse
	3,  // 20: progress.ProgressService.GetLeaders:output_type -> progress.GetLeadersResponse
	1,  // 21: progress.ProgressService.GetUserSkills:output_type -> progress.GetUserSkillsResponse
	0,  // 22: progress.ProgressService.GetStatistics:output_type -> progress.GetStatisticsResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_progress_progress_proto_init() }
func file_progress_progress_proto_init() {
	if File_progress_progress_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_progress_progress_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSkillsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetLeadersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*LeaderBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LanguageCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserAchievementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Achievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetMonthlyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetWeeklyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetDailyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*LCodeUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_progress_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_progress_progress_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_progress_progress_proto_goTypes,
		DependencyIndexes: file_progress_progress_proto_depIdxs,
		MessageInfos:      file_progress_progress_proto_msgTypes,
	}.Build()
	File_progress_progress_proto = out.File
	file_progress_progress_proto_rawDesc = nil
	file_progress_progress_proto_goTypes = nil
	file_progress_progress_proto_depIdxs = nil
}
